;;
;; Header files for JettonMarket
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $StateInit$_store
builder $StateInit$_store(builder build_0, (cell, cell) v) inline;

;; $StateInit$_load
(slice, ((cell, cell))) $StateInit$_load(slice sc_0) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, int, slice, slice, cell, int, cell) v) inline_ref;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, int, slice, slice, cell, int, cell) v) inline;

;; $Buy$_load
(slice, ((int, int))) $Buy$_load(slice sc_0) inline;

;; $JettonMarket$_store
builder $JettonMarket$_store(builder build_0, ((cell, cell), slice, slice, int) v) inline;

;; $JettonMarket$_load
(slice, (((cell, cell), slice, slice, int))) $JettonMarket$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $MarketData$_to_external
(int, slice, slice) $MarketData$_to_external(((int, slice, slice)) v) inline;

;; $JettonMaster$init$_store
builder $JettonMaster$init$_store(builder build_0, (slice, cell) v) inline;

;; $JettonMarket$init$_load
(slice, ((int, cell))) $JettonMarket$init$_load(slice sc_0) inline;

;; $JettonMaster$_init_child
(cell, cell) $JettonMaster$_init_child(cell sys', slice $owner, cell $jetton_content) inline_ref;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $JettonMarket$_contract_init
((cell, cell), slice, slice, int) $JettonMarket$_contract_init(int $jetton_price, cell $jetton_content) impure inline_ref;

;; $JettonMarket$_contract_load
((cell, cell), slice, slice, int) $JettonMarket$_contract_load() impure inline_ref;

;; $JettonMarket$_contract_store
() $JettonMarket$_contract_store(((cell, cell), slice, slice, int) v) impure inline;

;; $global_send
int $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Context$_fun_readForwardFee
int $Context$_fun_readForwardFee((int, slice, int, slice) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $MarketData$_constructor_jetton_price_jetton_master_address_owner
((int, slice, slice)) $MarketData$_constructor_jetton_price_jetton_master_address_owner(int $jetton_price, slice $jetton_master_address, slice $owner) inline;

;; $JettonMarket$_fun_get_data
(((cell, cell), slice, slice, int), (int, slice, slice)) $JettonMarket$_fun_get_data(((cell, cell), slice, slice, int) $self) impure inline_ref;

;; $JettonMarket$_fun_forward
(((cell, cell), slice, slice, int), ()) $JettonMarket$_fun_forward(((cell, cell), slice, slice, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $JettonMarket$_fun_notify
(((cell, cell), slice, slice, int), ()) $JettonMarket$_fun_notify(((cell, cell), slice, slice, int) $self, cell $body) impure inline;

;; $JettonMarket$_fun_owner
(((cell, cell), slice, slice, int), slice) $JettonMarket$_fun_owner(((cell, cell), slice, slice, int) $self) impure inline_ref;

;; $SendParameters$_constructor_to_value_body_mode_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_body_mode_code_data(slice $to, int $value, cell $body, int $mode, cell $code, cell $data) inline;

;; $Transfer$_constructor_query_id_amount_reciever_response_destination_forward_ton_amount_custom_payload_forward_payload
((int, int, slice, slice, cell, int, cell)) $Transfer$_constructor_query_id_amount_reciever_response_destination_forward_ton_amount_custom_payload_forward_payload(int $query_id, int $amount, slice $reciever, slice $response_destination, int $forward_ton_amount, cell $custom_payload, cell $forward_payload) inline;

;; $SendParameters$_constructor_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice $to, int $value, int $mode) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
